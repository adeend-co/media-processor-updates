name: Create and Sign Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Sign the Script Template
        id: sign_script
        run: |
          # 建立一個臨時的、標準化換行符的模板副本
          # 使用 sed 's/\r$//' 強制移除所有可能存在的 CR 字元 (\r)
          sed 's/\r$//' media_processor.sh > standardized_template.sh
          
          # 對這個標準化後的模板進行簽署
          gpg --detach-sign --armor -u ${{ secrets.GPG_SIGNING_KEY_ID }} standardized_template.sh
          
          # 將簽章內容編碼並傳遞給下一步
          SIGNATURE_B64=$(cat standardized_template.sh.asc | base64 -w 0)
          echo "SIGNATURE_B64_VALUE=${SIGNATURE_B64}" >> $GITHUB_OUTPUT

      - name: Prepare Final Release Script
        id: prepare_script
        run: |
          cp media_processor.sh release_script.sh
          PUBLIC_KEY_B64=$(gpg --armor --export ${{ secrets.GPG_SIGNING_KEY_ID }} | base64 -w 0)
          
          sed -i "s/^SCRIPT_VERSION=\".*\"/SCRIPT_VERSION=\"${{ github.ref_name }}\"/" release_script.sh
          sed -i "s/^SCRIPT_UPDATE_DATE=\".*\"/SCRIPT_UPDATE_DATE=\"$(date +%Y-%m-%d)\"/" release_script.sh
          sed -i "s@PUBLIC_KEY_PLACEHOLDER@${PUBLIC_KEY_B64}@" release_script.sh
          sed -i "s@SIGNATURE_PLACEHOLDER@${{ steps.sign_script.outputs.SIGNATURE_B64_VALUE }}@" release_script.sh
          
          echo "script_path=release_script.sh" >> $GITHUB_OUTPUT

      - name: Create Release Package
        run: |
          mv ${{ steps.prepare_script.outputs.script_path }} media_processor.sh
          zip release.zip media_processor.sh estimate_size.py sync_helper.py LICENSE.md README.md
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            自動化發布版本 ${{ github.ref_name }}。
            此版本包含 GPG 數位簽章，可透過腳本內建的「腳本完整性驗證」功能進行驗證。
          prerelease: false
