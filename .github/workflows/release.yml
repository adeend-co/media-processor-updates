# .github/workflows/release.yml (v1.2 - 修正 ZIP 打包邏輯)
name: Create and Sign Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Prepare Release Version of Script
        id: prepare_script
        run: |
          NEW_VERSION=${{ github.ref_name }}
          NEW_DATE=$(date +%Y-%m-%d)
          cp media_processor.sh release_media_processor.sh
          sed -i "s/^SCRIPT_VERSION=\".*\"/SCRIPT_VERSION=\"$NEW_VERSION\"/" release_media_processor.sh
          sed -i "s/^SCRIPT_UPDATE_DATE=\".*\"/SCRIPT_UPDATE_DATE=\"$NEW_DATE\"/" release_media_processor.sh
          echo "script_path=release_media_processor.sh" >> $GITHUB_OUTPUT

      - name: Prepare Signature Data
        id: sig_data
        run: |
          SCRIPT_TO_SIGN="${{ steps.prepare_script.outputs.script_path }}"
          gpg --detach-sign --armor -u ${{ secrets.GPG_SIGNING_KEY_ID }} "$SCRIPT_TO_SIGN"
          PUBLIC_KEY_B64=$(gpg --armor --export ${{ secrets.GPG_SIGNING_KEY_ID }} | base64 -w 0)
          SIGNATURE_B64=$(cat ${SCRIPT_TO_SIGN}.asc | base64 -w 0)
          echo "PUBLIC_KEY_B64_VALUE=$PUBLIC_KEY_B64" >> $GITHUB_OUTPUT
          echo "SIGNATURE_B64_VALUE=$SIGNATURE_B64" >> $GITHUB_OUTPUT

      - name: Inject Signature into Script
        run: |
          SCRIPT_TO_INJECT="${{ steps.prepare_script.outputs.script_path }}"
          sed -i "s@SIGNATURE_PLACEHOLDER@${{ steps.sig_data.outputs.SIGNATURE_B64_VALUE }}@" "$SCRIPT_TO_INJECT"
          sed -i "s@PUBLIC_KEY_PLACEHOLDER@${{ steps.sig_data.outputs.PUBLIC_KEY_B64_VALUE }}@" "$SCRIPT_TO_INJECT"

      # ★★★ 核心修正：簡化打包流程 ★★★
      - name: Create Release Package
        run: |
          # 1. 先將準備好的腳本重命名為最終發布的名稱
          mv ${{ steps.prepare_script.outputs.script_path }} media_processor.sh
          
          # 2. 用一個簡單的 zip 命令直接打包所有需要的檔案
          zip release.zip media_processor.sh estimate_size.py sync_helper.py

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            自動化發布版本 ${{ github.ref_name }}。
            
            此版本包含 GPG 數位簽章，可透過腳本內建的「腳本完整性驗證」功能進行驗證。
          prerelease: false
