name: Generate Checksum on Push to Main (Vtt to Ass) # 工作流程名稱

# 觸發條件：當程式碼被推送到 main 分支，且 vtt_to_ass_converter.py 檔案發生變更時
on:
  push:
    branches: [ main ]        # 只監聽 main 分支
    paths:
      - 'vtt_to_ass_converter.py' # 只在 vtt_to_ass_converter.py 變更時觸發

jobs:
  generate_and_commit:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 環境中運行

    steps:
      # 步驟 1：簽出儲存庫程式碼
      - name: Checkout code
        uses: actions/checkout@v4

      # 步驟 2：生成 SHA256 校驗和檔案
      - name: Generate SHA256 Checksum
        run: |
          sha256sum vtt_to_ass_converter.py | awk '{print $1}' > vtt_to_ass_converter.py.sha256
          echo "Checksum generated (value only):"
          cat vtt_to_ass_converter.py.sha256

      # 步驟 3：配置 Git 並提交校驗和檔案
      # <<< 新增 ID，雖然此 Action 不直接用，但好習慣 >>>
      - name: Commit checksum file
        id: commit_step # <<< 給這個步驟一個 ID (可選)
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add vtt_to_ass_converter.py.sha256

          # 檢查是否有實際的變更被暫存
          if git diff --staged --quiet; then
            echo "No changes to the checksum file to commit."
            # <<< 可選：設置一個輸出，但 ad-m/github-push-action 不需要 >>>
            # echo "committed=false" >> $GITHUB_OUTPUT 
          else
            git commit -m "Automated: Update checksum for vtt_to_ass_converter.py"
            echo "Checksum file committed."
            # <<< 可選：設置一個輸出 >>>
            # echo "committed=true" >> $GITHUB_OUTPUT
          fi

      # 步驟 4：將提交推送到遠程儲存庫
      # <<< 修正縮排，移除不必要的 if 條件 >>>
      - name: Push changes
        uses: ad-m/github-push-action@master 
        with: # <<< 與 uses 同級
          github_token: ${{ secrets.GITHUB_TOKEN }} # <<< 縮排一層
          branch: main                         # <<< 縮排一層
          # <<< 移除這裡的 if 條件，ad-m/github-push-action 會自動處理 >>>
